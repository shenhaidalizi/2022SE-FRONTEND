{"ast":null,"code":"import \"core-js/modules/es.json.stringify.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// @ is an alias to /src\nimport QuillEditor from '@/components/QuillEditor.vue';\nexport default {\n  name: 'EditorView',\n  inject: ['enterEditorView'],\n  components: {\n    QuillEditor: QuillEditor\n  },\n  data: function data() {\n    return {\n      unsaved: false,\n      raw: Object,\n      timer: Object,\n      editor: Object,\n      filename: String\n    };\n  },\n  mounted: function mounted() {\n    this.raw = {};\n    this.editor = this.$refs.myEditor; // 打开文件 \n\n    if (this.$route.params.openFile !== undefined) {\n      console.log('open file~');\n      this.filename = this.$route.params.openFile;\n      this.load();\n    } else {\n      this.filename = 'test';\n    }\n\n    this.enterEditorView(); // 切换编辑器工具栏\n\n    this.$store.commit(\"setSaveFunction\", this.save); // 提交save函数给vuex\n  },\n  updated: function updated() {\n    console.log('update!');\n  },\n  methods: {\n    save: function save() {\n      var nt = this.$notify;\n      console.log('saving!');\n      this.$axios.post('saving/save', this.$qs.stringify({\n        name: this.filename,\n        raw: this.raw\n      })).then(function (response) {\n        console.log(response);\n        nt({\n          title: \"保存成功\",\n          type: \"success\",\n          position: 'top-left',\n          offset: 60\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n      this.unsaved = false;\n    },\n    load: function load() {\n      var editor = this.$refs.myEditor;\n      console.log('loading!');\n      this.$axios.post('saving/load', this.$qs.stringify({\n        name: this.filename\n      })).then(function (response) {\n        editor.setContents(JSON.parse(response.data.raw));\n        console.log(JSON.parse(response.data.raw));\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    input: function input(val) {\n      //this.unsaved = true;\n      this.raw = JSON.stringify(val);\n    }\n  },\n  watch: {\n    unsaved: function unsaved(val) {\n      if (val) {\n        this.timer = window.setInterval(this.save, 60000);\n      } else {\n        clearInterval(this.timer);\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;AAUA;AACA;AAEA;EACAA,kBADA;EAEAC,2BAFA;EAGAC;IACAC;EADA,CAHA;EAMAC,IANA,kBAMA;IACA;MACAC,cADA;MAEAC,WAFA;MAGAC,aAHA;MAIAC,cAJA;MAKAC;IALA;EAOA,CAdA;EAeAC,OAfA,qBAeA;IACA;IACA,kCAFA,CAIA;;IACA;MACAC;MACA;MACA;IACA,CAJA,MAIA;MACA;IACA;;IACA,uBAZA,CAYA;;IAEA,iDAdA,CAcA;EAEA,CA/BA;EAgCAC,OAhCA,qBAgCA;IACAD;EACA,CAlCA;EAmCAE;IACAC,IADA,kBACA;MACA;MACAH;MACA;QACAX,mBADA;QAEAM;MAFA,IAIAS,IAJA,CAIA;QACAJ;QACAK;UACAC,aADA;UAEAC,eAFA;UAGAC,oBAHA;UAIAC;QAJA;MAMA,CAZA,EAaAC,KAbA,CAaA;QACAV;MACA,CAfA;MAgBA;IACA,CArBA;IAsBAW,IAtBA,kBAsBA;MACA;MACAX;MACA;QACAX;MADA,IAGAe,IAHA,CAGA;QACAP;QACAG;MACA,CANA,EAOAU,KAPA,CAOA;QACAV;MACA,CATA;IAUA,CAnCA;IAoCAY,KApCA,iBAoCAC,GApCA,EAoCA;MACA;MACA;IACA;EAvCA,CAnCA;EA4EAC;IACApB,OADA,mBACAmB,GADA,EACA;MACA;QACA;MACA,CAFA,MAEA;QACAE;MACA;IACA;EAPA;AA5EA","names":["name","inject","components","QuillEditor","data","unsaved","raw","timer","editor","filename","mounted","console","updated","methods","save","then","nt","title","type","position","offset","catch","load","input","val","watch","clearInterval"],"sourceRoot":"src/views","sources":["Editor.vue"],"sourcesContent":["<template>\r\n  <div class=\"1editor\" style=\"margin-bottom:0px\">\r\n      <!-- <el-button v-on:click=\"save\" type=\"primary\" :disabled=\"!this.$store.state.isLogin\">save</el-button> -->\r\n    <!-- <el-button v-on:click=\"load\">load</el-button> -->\r\n    <QuillEditor v-on:input=\"input\" ref=\"myEditor\" eHeight=\"700px\" :disabled=\"this.$store.state.isLogin\"/>\r\n    \r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// @ is an alias to /src\r\nimport QuillEditor from '@/components/QuillEditor.vue'\r\n\r\nexport default {\r\n  name: 'EditorView',\r\n  inject:['enterEditorView'],\r\n  components: {\r\n    QuillEditor,\r\n  },\r\n  data () {\r\n      return {\r\n          unsaved : false,\r\n          raw : Object,\r\n          timer : Object,\r\n          editor : Object,\r\n          filename: String,\r\n      }\r\n  },\r\n  mounted () {\r\n      this.raw = {};\r\n      this.editor = this.$refs.myEditor;\r\n\r\n      // 打开文件 \r\n      if(this.$route.params.openFile !== undefined){\r\n          console.log('open file~');\r\n          this.filename = this.$route.params.openFile;\r\n          this.load();\r\n      }else{\r\n          this.filename = 'test';\r\n      }\r\n      this.enterEditorView(); // 切换编辑器工具栏\r\n\r\n      this.$store.commit(\"setSaveFunction\", this.save); // 提交save函数给vuex\r\n      \r\n  },\r\n  updated () {\r\n      console.log('update!');\r\n  },\r\n  methods: {\r\n    save() {\r\n        let nt = this.$notify;\r\n        console.log('saving!');\r\n        this.$axios.post('saving/save', this.$qs.stringify({\r\n            name : this.filename,\r\n            raw : this.raw,\r\n        }))\r\n        .then(function (response) {\r\n            console.log(response);\r\n            nt({\r\n              title: \"保存成功\",\r\n              type: \"success\",\r\n              position: 'top-left',\r\n              offset:60,\r\n            });\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        });\r\n        this.unsaved = false;\r\n    },\r\n    load () {\r\n        let editor = this.$refs.myEditor;\r\n        console.log('loading!');\r\n        this.$axios.post('saving/load', this.$qs.stringify({\r\n            name : this.filename,\r\n        }))\r\n        .then(function (response) {\r\n            editor.setContents(JSON.parse(response.data.raw));\r\n            console.log(JSON.parse(response.data.raw));\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        });\r\n    },\r\n    input(val){\r\n        //this.unsaved = true;\r\n        this.raw = JSON.stringify(val);\r\n    }\r\n  },\r\n  watch: {\r\n      unsaved(val) {\r\n          if(val) {\r\n              this.timer = window.setInterval(this.save, 60000);\r\n          } else {\r\n              clearInterval(this.timer);\r\n          }\r\n      }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}